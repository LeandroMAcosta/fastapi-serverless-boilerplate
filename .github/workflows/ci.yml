name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        pytest
    
    - name: Format check
      run: |
        black . --check
    
    - name: Lint
      run: |
        flake8 .

  deploy-backend:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        role-duration-seconds: 1200
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
    
    - name: Terraform Init
      run: |
        cd infrastructure
        terraform init
    
    - name: Terraform Plan
      run: |
        cd infrastructure
        terraform plan -var="aws_profile=${{ secrets.AWS_PROFILE }}"
    
    - name: Terraform Apply
      run: |
        cd infrastructure
        terraform apply -auto-approve -var="aws_profile=${{ secrets.AWS_PROFILE }}"

  deploy-frontend:
    needs: deploy-backend
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        role-duration-seconds: 1200
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: |
        cd frontend
        npm install
    
    - name: Build and deploy frontend
      env:
        AWS_REGION: us-east-1
        AWS_PROFILE: ${{ secrets.AWS_PROFILE }}
        COGNITO_USER_POOL_ID: ${{ steps.terraform-output.outputs.cognito_user_pool_id }}
        COGNITO_CLIENT_ID: ${{ steps.terraform-output.outputs.cognito_client_id }}
        API_ENDPOINT: ${{ steps.terraform-output.outputs.api_endpoint }}
        S3_BUCKET: ${{ steps.terraform-output.outputs.frontend_bucket }}
        CLOUDFRONT_DISTRIBUTION_ID: ${{ steps.terraform-output.outputs.cloudfront_distribution_id }}
      run: |
        cd frontend
        chmod +x deploy.sh
        ./deploy.sh 